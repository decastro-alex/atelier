#! /usr/bin/env bash

#####################################################
# Script for starting/stopping Atelier
# 
# Last edited by: $Author: torstein $ $Date: 2008/11/08 11:41:25 $
# $Id: atelier,v 1.2 2008/11/08 11:41:25 torstein Exp $
#####################################################

#####################################################
# Read user settings
#####################################################
source /home/torstein/projects/atelier/src/main/bash/atelier.conf

#####################################################
# Default settings
#####################################################
atelier_opts="
-Xmx512m
"

# Defining the var and log directories and creating them if they don't
# already exist.
run_dir=/var/run/studio-s
log_dir=/var/log/studio-s

if [ ! -d $run_dir  ]; then
    mkdir -p $run_dir
fi

if [ ! -d $log_dir  ]; then
    mkdir -p $log_dir
fi

pid_file=$run_dir/atelier.pid
uptime_file=$run_dir/atelier.uptime
log_file=$log_dir/atelier-`date +%F`.log
id="[`basename $0`]"
#####################################################
# using both pid and ps to datelierrmine if atelier is running
atelier_process=`ps auxww | grep tomcat | grep java | wc -l`
pid=`ps auxww | awk '/tomcat/ && !/awk/ {print $2}'`

function exit_on_error()
{
    if [ $? -eq 1 ]; then
        echo $id $1 "FAILED, exiting :-("
        exit 1
    fi
}

function start_atelier() {
    echo $id "`date` starting atelier" >> $log_file
    echo -n $id "Starting Atelier: atelier" "..."
    
    if [ $appserver = "tomcat" ]; then
        export CATALINA_OPTS=$atelier_opts
        $tomcat_home/bin/catalina.sh run\
                1>>$log_file\
                2>>$log_file & pid=$!
    fi
    
    echo $pid > $pid_file
    echo `date +%s` > $uptime_file
    exit_on_error "start_atelier"
    echo " done"
}

function stop_atelier() {
    echo $id `date` "stopping atelier" >> $log_file
    echo -n $id "Stopping Atelier: atelier" "..."
    
    kill `cat $pid_file`\
        1>>$log_file\
        2>>$log_file
    rm $pid_file\
        1>>$log_file\
        2>>$log_file
        
    exit_on_error "stop_atelier"
    echo " done"
}

function tail_applog() {
    if [ $appserver = "tomcat" ]; then
        applog="$tomcat_home/logs/localhost.`date +%F`.log"
    fi
    
    echo $id "tailing $applog"
    tail -f $applog
}

function kill_atelier()
{
    if [ "$pid" ]; then
        echo $id "using force to stop atelier (pid" $pid")"
        kill -9 $pid
    else
        echo $id "nothing to kill"
    fi
}

function get_status()
{
    if [ $atelier_process -gt 0 ]; then
        echo $id "Atelier IS running with process ID `echo $pid | tr '\n' ' '`"
        if [ ! -f $pid_file ]; then
            echo $id "not started with the $id script"
        fi
    else
        echo $id "Atelier NOT is running"
    fi

}

function print_usage() {
    echo $id "Usage: `basename $0` <start|stop|kill|restart|log|applog>"
    echo $id
    echo $id  "start     - starts the atelier" 
    echo $id  "stop      - controlled stop of the atelier" 
    echo $id  "kill      - tries to kill the atelier process" 
    echo $id  "log       - displays the atelier log" 
    echo $id  "applog    - tails the app server log" 
    echo $id  "outlog    - tails the standard out log" 
}

case "$1" in
    start)
        start_atelier
        ;;
    status)
        get_status
        ;;
    stop)
        stop_atelier
        ;;
    kill)
        kill_atelier
        ;;
    restart)
        stop_atelier
        sleep 5
        start_atelier
        ;;
    outlog)
        echo $id "tailing $log_file"
        tail -f $log_file
        ;;
    log)
        echo $id "tailing $log_dir/atelier.log"
        tail -f $log_dir/atelier.log
        ;;
    applog)
        tail_applog
        ;;
    *)
        print_usage
        exit 1
        ;;
esac



